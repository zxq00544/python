<img src="" alt=""> (src=""标签属性,src=属性名,""=属性值)
selenium元素的定位方法:
id、name、class   相关属性值
tag_name   标签名
link_text、(坡扫)partial_link_text     超链接文本内容
xpath: 路径   (安磐石)
css:  css选择器
list定位: find_elements_by_xxx()
by类定位: find_element.(BY.XXX,"xxxx")
selenium脚本设计思路:
1.  导包
2.  实例化webdriver,打开并最大化浏览器
driver.maximize.Chrome()
3.打开被测网址(url)
4.定位、操作元素实现需求
5.暂停、退出浏览器

编写selenium脚本有哪些要求:
测试用例中方法名必须以test开头，否则不会被执行
类的后写main方法
光标放在代码后面的空白行或者mian()方法的位置执行
.py文件名必须满足标识符命名规则
测试类必须继承与
每一个test_xxx()方法被执行之前都会先执行setUp()，然后在执行test_xxx()方法，最后执行tearDown()方法
相关操作方法:
get(url):打开网址
quit:退出浏览器
send_keys(输入的内容):抹蜜输入
click():模拟点击
clear():清空已有的输入
webdriver 其他操作方法:
driver.title:获取网页标题
driver.current_url:获取网页的网址
get_attribute("属性名") 获取某元素的属性值
text  获取元素的文本
下拉框定位:
select类用于解决select标签下拉列表定位问题
对象名 = Select(下拉框元素)
select_by_index(索引)
select_by_value('value属性值')
select_by_Visible_text('显示文本')
对话框的处理:
注意:当对话框弹出后没有处理,网页中不能做任何操作-------》模态窗口
警告框、确认框、提示框
获取对话框: 变量名 = driver.switch_to.alert
变量名.text  获取对话框文本信息
变量名.accept()  点击确认按钮
变量名.dismiss() 点击取消按钮
变量名.send_keys()   模拟输入
自动化测试框架:
理解: 设计自动化测试用例(脚本)的一套规范
作用:要实现批量执行自动化脚本及生成html测试报告,就必须使用测试框架
框架有:unittest、pytest、TestNg、junit、FrameWork........
unittest框架核心要素:
TestCase:测试用例
TestSuite:测试条件,测试用例集
TextTestRunner:测试执行,用来执行测试套件
Fixture: 概述/集合, setUp()、tearDown()
注意事项:
批量执行的.py文件要和脚本存在放在同级目录,否者截图会失败
unittest.TestSuite.addTest(类名('方法名')):批量执行指定测试类中的指定以test开头的方法
defaultTestLoader----TestSuite 一种特殊的实现方式
discover('指定搜索的目录','指定.py文件开头')
在指定目录搜索指定开头的.py文件中,把测试类中所有以test开头的方法添加到测试套件中
unittest基本布尔型断言:
self.assertIn
self.assertEqual(arg1,arg2)
断言的作用及应用:
自动化判断预期结果是否等于实际结果
html测试报告
单用例
批用例执行
tcp和udp:
tcp:传输控制协议
udp:用户数据报协议

